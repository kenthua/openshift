---
- name: replace master public url
  replace: 
    dest: "{{ master_config }}"
    regexp: "masterPublicURL: {{ original.master_url }}"
    replace: "masterPublicURL: {{ new.master_url }}"
    
- name: replace public url
  lineinfile: 
    dest: "{{ master_config }}"
    regexp: '  publicURL: '
    line: '  publicURL: {{ new.master_url }}:8443/console/'
    
- name: asset public url
  lineinfile: 
    dest: "{{ master_config }}"
    regexp: '  assetPublicURL: '
    line: '  assetPublicURL: {{ new.master_url }}:8443/console/'   
    
- name: logging public url
  lineinfile: 
    dest: "{{ master_config }}"
    regexp: '  loggingPublicURL: '
    line: '  loggingPublicURL: {{ new.logging_url }}'  
  tags:
    - logging    
    
- name: metrics public url
  lineinfile: 
    dest: "{{ master_config }}"
    regexp: '  metricsPublicURL: '
    line: '  metricsPublicURL: {{ new.metrics_url }}'    
  tags:
    - metrics
               
- name: replace subdomain
  lineinfile: 
    dest: "{{ master_config }}"
    insertafter: '^routingConfig:'
    regexp: ' subdomain: '
    line: '  subdomain: {{ new_wildcard_fqdn }}' 
    
- name: replace corsAllowedOrigins
  lineinfile:
    dest: "{{ master_config }}"
    insertafter: "^corsAllowedOrigins:"
    line: '- {{ app_name.master }}.{{ subdomain }}.{{ domain }}' 
  
- name: switch to correct context
  command: "oc config use-context {{ default_context }}"
  
- name: switch to project openshift-infra
  command: "oc project openshift-infra"        
  tags:
    - metrics

- name: delete hawkular metrics route
  command: oc delete route hawkular-metrics
  ignore_errors: yes
  tags:
    - metrics

- name: create hawkular metrics route
  command: oc create route passthrough --service=hawkular-metrics --hostname={{ app_name.metrics }}.{{ new_wildcard_fqdn }}
  tags:
    - metrics
        
- name: switch to logging project
  command: "oc project logging"       
  tags:
    - logging
    
- name: delete kibana logging route
  command: oc delete route logging-kibana
  ignore_errors: yes
  tags:
    - logging
    
- name: create kibana logging route
  command: oc create route passthrough --service=logging-kibana --hostname={{ app_name.kibana }}.{{ new_wildcard_fqdn }}
  tags:
    - logging

- name: update kibaba-proxy oauth redirects
  command: oc patch oauthclient kibana-proxy -p '{"redirectURIs":["https://{{ app_name.kibana }}.{{ new_wildcard_fqdn }}","https://kibana-ops.example.com"]}'
  tags:
    - logging

- name: extract dc logging-kibana to yaml
  shell: oc get dc/logging-kibana -o yaml > /root/dc-logging-kibana.yml
  tags:
    - logging

- name: edit dc logging-kibana yaml
  replace:
    dest: /root/dc-logging-kibana.yml
    regexp: '{{ old_master_app_name }}.{{ old_subdomain }}.{{ old_domain }}'
    replace: '{{ app_name.master }}.{{ subdomain }}.{{ domain }}'
  tags:
    - logging

- name: replace dc logging kibana with yaml
  shell: "cat /root/dc-logging-kibana.yml | oc replace -f -"
  tags:
    - logging

## service-catalog
- name: switch to service-catalog project
  command: "oc project kube-service-catalog"       
  tags:
    - servicecatalog

- name: delete apiserver route
  command: oc delete route apiserver
  ignore_errors: yes
  tags:
    - servicecatalog
    
- name: create apiserver route
  command: oc create route passthrough --service=apiserver --hostname={{ app_name.apiserver }}-kube-service-catalog.{{ new_wildcard_fqdn }}
  tags:
    - servicecatalog

## asb
- name: switch to asb project
  command: "oc project openshift-ansible-service-broker"       
  tags:
    - asb

- name: delete asb route
  command: oc delete route asb-1338
  ignore_errors: yes
  tags:
    - asb
    
- name: create apiserver route
  command: oc expose service asb --name=asb-1338 --port=1338
  tags:
    - asb

## docker-registry
- name: switch to default project
  command: "oc project default"       
  tags:
    - docker-registry
    
- name: delete docker-registry route
  command: oc delete route docker-registry
  ignore_errors: yes
  tags:
    - docker-registry
    
- name: create docker-registry route
  command: oc create route passthrough --service=docker-registry --hostname={{ app_name.docker_registry }}-default.{{ new_wildcard_fqdn }}
  tags:
    - docker-registry

## registry-console
- name: switch to default project
  command: "oc project default"       
  tags:
    - registry-console
  
- name: delete registry-console route
  command: oc delete route registry-console
  ignore_errors: yes
  tags:
    - registry-console
  
- name: create registry-console route
  command: oc create route passthrough --service=registry-console --hostname={{ app_name.registry_console }}-default.{{ new_wildcard_fqdn }}
  tags:
    - registry-console

- name: update registry-console cockpit oauth redirects
  command: oc patch oauthclient cockpit-oauth-client -p '{"redirectURIs":["https://{{ app_name.registry_console }}-default.{{ new_wildcard_fqdn }}"]}'
  tags:
    - registry-console

- name: extract dc registry-console to yaml
  shell: oc get dc/registry-console -o yaml > /root/dc-registry-console.yml
  tags:
    - registry-console
 
- name: edit dc registry-console contents yaml
  replace:
    dest: /root/dc-registry-console.yml
    regexp: "{{ item.exp }}"
    replace: "{{ item.rep }}"
  with_items:
    - { exp: "{{ old_master_app_name }}.{{ old_subdomain }}.{{ old_domain }}", rep: "{{ app_name.master }}.{{ subdomain }}.{{ domain }}" }
    - { exp: "{{ app_name.docker_registry }}-default.{{ old_wildcard_fqdn }}", rep: "{{ app_name.docker_registry }}-default.{{ new_wildcard_fqdn }}" }
  tags:
    - registry-console

- name: replace dc registry-console with yaml
  shell: "cat /root/dc-registry-console.yml | oc replace -f -"
  tags:
    - registry-console

## gluster 
- name: switch to storage project
  command: "oc project storage-project"       
  when: storage_enabled
  tags:
    - storage
    
- name: delete heketi route
  command: oc delete route heketi
  ignore_errors: yes
  when: storage_enabled
  tags:
    - storage
    
- name: create heketi route
  command: oc expose service heketi --hostname={{ app_name.heketi }}-storage-project.{{ new_wildcard_fqdn }}
  when: storage_enabled
  tags:
    - storage

- name: extract sc gluster-heketi to yaml
  shell: oc get storageclass/gluster-heketi -o yaml > /root/sc-gluster-heketi.yml
  when: storage_enabled
  tags:
    - storage

- name: edit sc gluster-heketi yaml
  replace:
    dest: /root/sc-gluster-heketi.yml
    regexp: '{{ app_name.heketi }}-storage-project.{{ old_wildcard_fqdn }}'
    replace: '{{ app_name.heketi }}-storage-project.{{ new_wildcard_fqdn }}'
  when: storage_enabled
  tags:
    - storage

- name: delete sc gluster-heketi
  command: oc delete storageclass/gluster-heketi
  ignore_errors: yes
  when: storage_enabled
  tags:
    - storage

- name: create sc gluster-heketi with yaml
  shell: "cat /root/sc-gluster-heketi.yml | oc create -f -"
  when: storage_enabled
  tags:
    - storage

- name: extract dc heketi to yaml
  shell: oc get dc/heketi -o yaml > /root/dc-heketi.yml
  when: storage_enabled
  tags:
    - storage

- name: edit dc heketi yaml
  replace:
    dest: /root/dc-heketi.yml
    regexp: '{{ old_master_app_name }}.{{ old_subdomain }}.{{ old_domain }}'
    replace: '{{ app_name.master }}.{{ subdomain }}.{{ domain }}'
  when: storage_enabled
  tags:
    - storage

- name: replace dc heketi with yaml
  shell: "cat /root/dc-heketi.yml | oc replace -f -"
  when: storage_enabled
  tags:
    - storage

# only run this when guid is filled, i.e. rhpds
- name: let redeploys settle
  pause:
    seconds: "{{ aos_restart_delay }}"
  when: guid|default(None) != None

# need to restart for some of the url changes  
- name: restart atomic openshift
  service:
    name: "{{ item }}"
    state: restarted
  with_items:
    - atomic-openshift-master
    - atomic-openshift-node
  tags:
    - update_dns
